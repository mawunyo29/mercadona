# Documentation on how to configure the bundle can be found at: https://symfony.com/doc/current/bundles/LiipImagineBundle/basic-usage.html
liip_imagine:
    # valid drivers options include "gd" or "gmagick" or "imagick
    resolvers:
        default:
            web_path:
                web_root: ~ # %kernel.project_dir%/public (%kernel.project_dir%/web for Symfony < 4.0.0)
                cache_prefix: ~ # media/cache

    loaders:
        default:
            filesystem:
                data_root: ~  # %kernel.project_dir%/public (%kernel.project_dir%/web for Symfony < 4.0.0)

    driver:               gd
    cache:                default
    data_loader:          default
    default_image:        null
    twig:
        mode:             legacy
    default_filter_set_settings:
        quality:              100
        jpeg_quality:         ~
        png_compression_level:  ~
        png_compression_filter: ~
        animated:             false
        format:               ~
        cache:                ~
        data_loader:          ~
        default_image:        null
        filters: []
        post_processors: []
    controller:
        filter_action:          liip_imagine.controller:filterAction
        filter_runtime_action:  liip_imagine.controller:filterRuntimeAction
        redirect_response_code: 302
    webp:
        generate:    false
        quality:     100
        cache:       ~
        data_loader: ~
        post_processors: []
    filter_sets:

        # Prototype
        name:
            quality:              100
            jpeg_quality:         ~
            png_compression_level:  ~
            png_compression_filter: ~
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:

                # Prototype
                name:                 []

            post_processors:

                # Prototype
                name:                 []